package huawei;

import java.util.ArrayDeque;

public final class Demo {


	/*
	Description  
	         要求按照指定要求打印二叉树
	Input Param 
	         head   需要打印的二叉树头结点
	Return Value
	        打印出的字符串
	*/
	public static String biNodePrint(BiNode head)
	{
		/*在这里实现功能*/
		ArrayDeque<BiNode> queue = new ArrayDeque<BiNode>();
		queue.add(head);
		String output = "";
		while (!queue.isEmpty()) {
			BiNode curNode = queue.remove();
//			System.out.println(curNode.getData());
			output += String.valueOf(curNode.getData());
			if (curNode.getLeft() != null) {
				queue.add(curNode.getLeft());
			}
			if (curNode.getRight() != null) {
				queue.add(curNode.getRight());
			}
		}
//		System.out.println(output);
		return output;
	/*	LinkedList list = new LinkedList();
		StringBuilder builder = new StringBuilder();
		if (head == null) {
			return null;
		}
		list.add(head);
		BiNode node = null;
		while (!list.isEmpty()) {
			node = (BiNode) list.poll();
			builder.append(node.getData());
			if (null != node.getLeft()) {
				list.add(node.getLeft());
			}
			if (null != node.getRight()) {
				list.add(node.getRight());
			}
		}
		return builder.toString();*/
	}
	
}


